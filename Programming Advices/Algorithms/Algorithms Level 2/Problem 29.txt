Bool 

#include <iostream>
#include <cstdlib>
using namespace std;

int RandomNumber(int From, int To)
{
	//Function to generate a random number

	int randNum = rand() % (To - From + 1) + From;
	return randNum;
}

int ReadPostiveNumber(string Message)
{
	int num = 0;
	do
	{
		cout << Message;
		cin >> num;
	} while (num <= 0);
	return num;
}

void FillArrayWithRandomNumbers(int arr[100], short& numOfElements)
{
	numOfElements = ReadPostiveNumber("Enter the number of elements: ");

	for (int i = 0; i < numOfElements; i++)
	{
		arr[i] = RandomNumber(1, 100);
	}

}

void PrintArray(int arr[100], short length)
{
	for (int i = 0; i < length; i++) 
		cout << arr[i] << " ";
}

bool CheckPrime(int num) 
{
   
	int  M = round(num / 2);

	for (int counter = 2; counter <= M; counter++) {
		if (num % counter == 0) 
		{
			return 0;
		}
	}

	return 1;  
}

void FillarrayOnlyPrimeNumber(int primearr[100], int arr[100], short numOfElements, short &counter)
{
	counter = 0;    
	for (int i = 0; i < numOfElements; i++) 
	{
		if (CheckPrime(arr[i]))
		{
			 
			primearr[counter] = arr[i]; 
			counter++;
		}
	}
}


int main() {

	srand((unsigned)time(NULL));

	int arr[100];
	int primearr[100];  
	short numOfElements, counter;  

	FillArrayWithRandomNumbers(arr, numOfElements);
	cout << "\nArray 1 Elements:" << endl;
	PrintArray(arr, numOfElements);
	cout << "\n"; 


	FillarrayOnlyPrimeNumber(primearr, arr , numOfElements , counter);
	cout << "\nPrime  numbers in Array 2:" << endl;
	PrintArray(primearr, counter); 
	cout << "\n";
	  

	return 0;
}

************************************************************************************************
Enum 

#include <iostream>
using namespace std;

enum enPrimNotPrime { Prime = 1, NotPrime = 2 };

enPrimNotPrime CheckPrime(int Number)
{
    int M = round(Number / 2);
    for (int Counter = 2; Counter <= M; Counter++)
    {
        if (Number % Counter == 0)
            return enPrimNotPrime::NotPrime;
    }
    return enPrimNotPrime::Prime;
}

int RandomNumber(int From, int To)
{
    // Function to generate a random number
    int randNum = rand() % (To - From + 1) + From;
    return randNum;
}

void FillArrayWithRandomNumbers(int arr[100], int& arrLength)
{
    cout << "\nEnter number of elements:\n";
    cin >> arrLength;
    for (int i = 0; i < arrLength; i++)
        arr[i] = RandomNumber(1, 100);
}

void CopyOnlyPrimeNumbers(int arrSource[100], int arrDestination[100], int arrLength, int& arr2Length)
{
    int Counter = 0;
    for (int i = 0; i < arrLength; i++)
    {
        if (CheckPrime(arrSource[i]) == enPrimNotPrime::Prime)
        {
            arrDestination[Counter] = arrSource[i];
            Counter++;
        }
    }
    arr2Length = Counter;
}

void PrintArray(int arr[100], int arrLength)
{
    for (int i = 0; i < arrLength; i++)
        cout << arr[i] << " ";
    cout << "\n";
}

int main()
{
    // Seeds the random number generator in C++, called only once
    srand((unsigned)time(NULL));
    int arr[100], arrLength;
    FillArrayWithRandomNumbers(arr, arrLength);
    int arr2[100], arr2Length = 0;
    CopyOnlyPrimeNumbers(arr, arr2, arrLength, arr2Length);
    cout << "\nArray 1 elements:\n";
    PrintArray(arr, arrLength);
    cout << "\nPrime Numbers in Array2:\n";
    PrintArray(arr2, arr2Length);
    return 0;
}
