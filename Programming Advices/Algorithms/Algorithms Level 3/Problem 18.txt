#include <iostream>
#include <cstdlib>
#include <iomanip>

using namespace std;


int RandomNumber(int From, int To)
{
	//Function to generate a random number

	int randNum = rand() % (To - From + 1) + From;
	return randNum;
}   

void FillMatirx(int arr[3][3], short Rows, short Cols) 
{
	for (short i = 0; i < Rows; i++)
	{
		for (short j = 0; j < Cols; j++)
		{
			arr[i][j] = RandomNumber(1, 100);
		}
	}

}     

void PrintMatrix(int arr[3][3], short Rows, short Cols)
{
	for (short i = 0; i < Rows; i++) 
	{
		for (short j = 0; j < Cols; j++) 
		{ 
			 //cout << left << setw(5) << arr[i][j] ;   
			printf("%0*d   ",2, arr[i][j]); 
		}
		cout << endl;    
	}
}

bool isNumberInMatrix(int arr[3][3], short Rows, short Cols, short num)    
{

	for (short i = 0; i < Rows; i++)
	{
		for (short j = 0; j < Cols; j++)
		{
			if (arr[i][j] == num)
			{
				return true;  
			} 
		}
	}
	return false; 

}

void PrintIntersectedNumber(int arr1[3][3],int arr2[3][3], short Rows, short Cols)
{
	   
	for (short i = 0; i < Rows; i++) 
	{
		for (short j = 0; j < Cols; j++) 
		{
			if (isNumberInMatrix(arr2,3,3,arr1[i][j]))   
			{
				cout << arr1[i][j] << "  "; 
			}
		}
	}
	cout << endl;    
}

int main()
{

	srand((unsigned)time(NULL));

	int arr1[3][3], arr2[3][3]; 
	
	FillMatirx(arr1, 3, 3);
	FillMatirx(arr2, 3, 3);   

	cout << "Matrix 1:" << endl;   
	PrintMatrix(arr1, 3, 3); 
	 
	cout << "\nMatrix 1:" << endl;
	PrintMatrix(arr2, 3, 3); 
	
	cout << "\nIntersected Numbers are: \n" << endl;  
 
	PrintIntersectedNumber(arr1,arr2,3,3);

	return 0; 
}