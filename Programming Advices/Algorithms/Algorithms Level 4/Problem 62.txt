

#include <iostream>
#include <iomanip>  
#include <ctime>
using namespace std; 

struct stDate {
    short Year;
    short Month;
    short Day;
};

short ReadDay() {
    short Day;
    cout << "\nPlease enter a Day? ";  
    cin >> Day;
    return Day;
}

short ReadMonth() {
    short Month;
    cout << "Please enter a Month? ";
    cin >> Month;
    return Month;
}

int ReadNumber(string Message)
{
    int Num;
    cout << Message;
    cin >> Num;
    return Num;
}

bool isItLeapYear(int Year)
{
    return (Year % 4 == 0 && Year % 100 != 0) || (Year % 400 == 0);
}

bool isLastMonthInYear(short Month)
{
    return (Month == 12);
}

short NumberOFDaysInaMonth(int Year, short Month)
{
    if (Month < 1 || Month > 12)
    {
        return 0;
    }

    // Days of 31 = { 1 , 3 , 5 , 7 , 8 ,10 , 12 }
    // Days of 30 = { 4 , 6 , 9 , 11}


    return ((Month == 2) ? (isItLeapYear(Year) ? 29 : 28) : (((Month <= 7 && Month % 2 == 1)) || ((Month > 7 && Month % 2 == 0)) ? 31 : 30));

}

bool isitLastDayInMonth(stDate Date)
{
    return (Date.Day == NumberOFDaysInaMonth(Date.Year, Date.Month));
}

stDate ReadDate()
{
    stDate Date;
    Date.Day = ReadNumber("Please Enter a Day? ");
    Date.Month = ReadNumber("\nPlease Enter a Month? ");
    Date.Year = ReadNumber("\nPlease enter a year? ");
    cout << "\n" << endl;
    return Date;
}

void  SwapDates(stDate& Date1, stDate& Date2)
{
    stDate TempDate;
    TempDate.Year = Date1.Year;
    TempDate.Month = Date1.Month;
    TempDate.Day = Date1.Day;

    Date1.Year = Date2.Year;
    Date1.Month = Date2.Month;
    Date1.Day = Date2.Day;


    Date2.Year = TempDate.Year;
    Date2.Month = TempDate.Month;
    Date2.Day = TempDate.Day;
}

short ReadYear() {
    short Year;
    cout << "Please enter a Year? ";
    cin >> Year;
    return Year;
}

stDate ReadFullDate() {
    stDate Date;
    Date.Day = ReadDay();
    Date.Month = ReadMonth();
    Date.Year = ReadYear();
    return Date;
}

bool isDateValid(stDate Date)
{
    return ((Date.Day > 0 && Date.Day <= NumberOFDaysInaMonth(Date.Year, Date.Month)) && (Date.Month >= 1 && Date.Month <= 12)); 
}

int main() {
    cout << "\nEnter Date:";
    stDate Date = ReadFullDate();   
  
    if (isDateValid(Date))
    {
        cout << "\nYes, Date is a valid date." << endl; 
    }
    else
    {
        cout << "\nNo, Date is NOT valid date." << endl;   
    }


    system("pause>0");

    return 0;
}



