#pragma warning(disable : 4996)

#include <iostream>
#include <iomanip> 
#include <ctime>
using namespace std;

struct stDate
{
    short Day;
    short Month;
    short Year; 
};

stDate GetSystemDate()
{
    time_t t = time(0); 
    tm* now = localtime(&t); 

    stDate Current; 
    Current.Day = now->tm_mday;
    Current.Month = now->tm_mon + 1; 
    Current.Year = now->tm_year + 1900; 

    return Current; 
}

int ReadNumber(string Message) 
{
    int Num;
    cout << Message;
    cin >> Num;
    return Num;
}
 
bool isItLeapYear(int Year)
{
    return (Year % 4 == 0 && Year % 100 != 0) || (Year % 400 == 0);
}

short NumberOFDaysInaMonth(int Year, short Month)
{
    if (Month < 1 || Month > 12)
    {
        return 0;
    }

    // Days of 31 = { 1 , 3 , 5 , 7 , 8 ,10 , 12 }
    // Days of 30 = { 4 , 6 , 9 , 11}


    return ((Month == 2) ? (isItLeapYear(Year) ? 29 : 28) : (((Month <= 7 && Month % 2 == 1)) || ((Month > 7 && Month % 2 == 0)) ? 31 : 30));

}

stDate ReadDate()
{ 
     stDate Date;  
     Date.Day = ReadNumber("Please Enter a Day? ");  
     Date.Month = ReadNumber("\nPlease Enter a Month? ");   
     Date.Year = ReadNumber("\nPlease enter a year? ");  
     cout << "\n" << endl;  
    return Date;   
}    

bool isitLastDayInMonth(stDate Date)   
{
    return (Date.Day == NumberOFDaysInaMonth(Date.Year,Date.Month)); 
}

bool isLastMonthInYear(short Month)
{
    return (Month == 12); 
}

bool IsDate1BeforeDate2(stDate Date1, stDate Date2) 
{
    return  (Date1.Year < Date2.Year) ? true : ((Date1.Year == Date2.Year) ? (Date1.Month < Date2.Month ? true : (Date1.Month == Date2.Month ? Date1.Day < Date2.Day : false)) : false);
}

bool IsDate1EqualDate2(stDate Date1, stDate Date2)
{
    return  (Date1.Year == Date2.Year) ? ((Date1.Month == Date2.Month) ? ((Date1.Day == Date2.Day) ? true : false) : false) : false;
}

stDate InceareDateByOneDay(stDate Date)
{
    if (isitLastDayInMonth(Date) && isLastMonthInYear(Date.Month))
    {
        Date.Day = 1;
        Date.Month = 1;
        Date.Year++;
    }
    else if (isitLastDayInMonth(Date))
    {
        Date.Day = 1;
        Date.Month++;
    }
    else
    {
        Date.Day++;
    }

    return Date;
}

short DiffBetweenDates(stDate Date1, stDate Date2, bool AddEndDay = false)  
{
    int Days = 0;

    while (IsDate1BeforeDate2(Date1, Date2)) 
    {
        Days++;
        Date1 = InceareDateByOneDay(Date1); 
    }
 
    return  AddEndDay ? ++Days : Days; 
}

int main() { 


    cout << "Please enter your date of birth:\n" << endl; 
    stDate Date1 = ReadDate();
    stDate Date2 = GetSystemDate();   
    
    cout << "Your Age is : " << DiffBetweenDates(Date1, Date2) << " Day(s)." << endl;  
   

   


    return 0;
}