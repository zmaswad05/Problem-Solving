#include <iostream>
#include <cstdlib>
using namespace std;

enum enCharType { SamallLetter = 1, CapitalLetter = 2,
	SpecialCharacter = 3, Digit = 4 };

int ReadPostiveNumber(string Message) 
{
	int num = 0;
	do
	{
		cout << Message ;  
		cin >> num; 
	} while (num <= 0);
	return num; 
}

int RandomNumber(int From, int To)
{
	int randNum = rand() % (To - From + 1) + From; 
	return randNum;
}

char GetRandomCharacter(enCharType CharType)
{
	switch (CharType)
	{
	case enCharType::SamallLetter:
	{
		return char(RandomNumber(97, 122));
		break;
	}
	case enCharType::CapitalLetter:
	{
		return char(RandomNumber(65, 90));
		break;
	}
	case enCharType::SpecialCharacter:
	{
		return char(RandomNumber(33, 47));
		break;
	}
	case enCharType::Digit:
	{
		return char(RandomNumber(48, 57));
		break;
	}
	}
}

string GenerateWord(enCharType CharType , short length )
{
	string Word ; 
    
	for (int i = 1; i <= length; i++) { 
		Word = Word + GetRandomCharacter(CharType);  
	}

	return Word;  
	 
}

string GenerateKey()
{

	string Key = "";

	Key = GenerateWord(enCharType::CapitalLetter, 4) + "-";
	Key = Key + GenerateWord(enCharType::CapitalLetter, 4) + "-";
	Key = Key + GenerateWord(enCharType::CapitalLetter, 4) + "-";
	Key = Key + GenerateWord(enCharType::CapitalLetter, 4);

	return Key;

}

void KeysGenerator(short NumberofKeys) 
{


	for (int i = 1; i <= NumberofKeys; i++)   
	{
		cout << "Key[" << i << "] : ";
		cout << GenerateKey() << endl; 
	}

}

int main() {

	srand((unsigned)time(NULL));

	 
	KeysGenerator(ReadPostiveNumber("Enter the number of keys: "));
	 
	
	return 0;
}